name: Main pipeline

on: [push]

env:
    DATABASE_HOST: localhost
    DATABASE_NAME: wake
    DATABASE_USERNAME: postgres
    DATABASE_PASSWORD: root

jobs:
    test:
        runs-on: ubuntu-latest
        timeout-minutes: 30
        services:
            postgres:
                image: postgres:latest
                env:
                    POSTGRES_DB: wake
                    POSTGRES_PASSWORD: root
                    POSTGRES_USER: postgres
                ports:
                    - 5432:5432
                # Set health checks to wait until postgres has started
                options: >-
                    --health-cmd pg_isready
                    --health-interval 10s
                    --health-timeout 5s
                    --health-retries 5
        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-node@v1
              with:
                  node-version: '14.x'
            - run: npm ci
            - run: npm run test
        env:
            CI: true
    lint:
        runs-on: ubuntu-latest
        timeout-minutes: 30
        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-node@v1
              with:
                  node-version: '14.x'
            - run: npm ci
            - run: npm run lint
    build:
        runs-on: ubuntu-latest
        timeout-minutes: 30
        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-node@v1
              with:
                  node-version: '14.x'
            - run: npm ci
            - run: npm run build
    deploy:
        runs-on: ubuntu-latest
        needs: [lint, test, build]
        if: github.ref == 'refs/heads/master'
        timeout-minutes: 30
        steps:
            - uses: actions/checkout@v1
            - run: zip -r deploy.zip . -x '*.git*'
            - uses: einaregilsson/beanstalk-deploy@v16
              with:
                  aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  application_name: wake-server-side-dev
                  environment_name: Wakeserversidedev-env
                  version_label: ${{ github.sha }}
                  region: us-east-1
                  deployment_package: deploy.zip
